version: '2.2'
services:

  fluentd:
    build: fluentd
    container_name: fluentd
    extra_hosts:
      - "es.${DOMAIN_NAME}:${LOCAL_IP}"
    volumes:
      - $PWD/fluentd/fluent-app-protect.conf:/fluentd/etc/fluent.conf
      - $PWD/logs/nginx/:/var/log/nginx/
      - $PWD/logs/app_protect/:/var/log/app_protect/
    depends_on: ['elasticsearch']

  nginx-app-protect:
    container_name: nginx-app-protect
    # if you already have a built image, save time and use it instead
    # image: registry.domain.com/nginx-app-protect:latest
    build: nginx-app-protect
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - $PWD/nginx-app-protect/etc/nginx/conf.d/:/etc/nginx/conf.d/
      - $PWD/nginx-app-protect/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - $PWD/nginx-app-protect/etc/nginx/custom_log_format.json:/etc/nginx/custom_log_format.json
      - $PWD/nginx-app-protect/etc/nginx/all-log-vars.conf:/etc/nginx/all-log-vars.conf
      - $PWD/logs/nginx/:/var/log/nginx/
      - $PWD/logs/app_protect/:/var/log/app_protect/
      - $PWD/certs/:/certs/
    depends_on: ['kibana']

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
    container_name: kibana
    ports:
      - 5601:5601
    extra_hosts:
      - "es.${DOMAIN_NAME}:${LOCAL_IP}"
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_URL: https://es.${DOMAIN_NAME}:9200
      ELASTICSEARCH_HOSTS: https://es.${DOMAIN_NAME}:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: ${PASSWORD}
      SERVER_SSL_ENABLED: "true"
      SERVER_SSL_KEY: "/certs/privkey.pem"
      SERVER_SSL_CERTIFICATE: "/certs/fullchain.pem"
    volumes:
      - $PWD/certs/:/certs/
    depends_on: ['elasticsearch']

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    extra_hosts:
      - "es.${DOMAIN_NAME}:${LOCAL_IP}"

    environment:
      - node.name=es.${DOMAIN_NAME}
      - discovery.seed_hosts=es.${DOMAIN_NAME}
      - cluster.initial_master_nodes=es.${DOMAIN_NAME}
      - ELASTIC_PASSWORD=${PASSWORD}
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.license.self_generated.type=trial
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=/usr/share/elasticsearch/config/certificates/privkey.pem
      - xpack.security.http.ssl.certificate_authorities=/usr/share/elasticsearch/config/certificates/chain.pem
      - xpack.security.http.ssl.certificate=/usr/share/elasticsearch/config/certificates/fullchain.pem
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.certificate_authorities=/usr/share/elasticsearch/config/certificates/chain.pem
      - xpack.security.transport.ssl.certificate=/usr/share/elasticsearch/config/certificates/fullchain.pem
      - xpack.security.transport.ssl.key=/usr/share/elasticsearch/config/certificates/privkey.pem
    volumes:
      - elk-data:/usr/share/elasticsearch/data
      - $PWD/certs/:/usr/share/elasticsearch/config/certificates/
    ports:
      - 9200:9200
    healthcheck:
      test: curl --cacert /usr/share/elasticsearch/config/certificates/chain.pem -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

volumes: {"elk-data"}
